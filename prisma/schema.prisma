generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type TextsClients {
  logoUrl String
}

type TextsHero {
  description String
  subtitle    String
  title       String
}

type TextsServicePages {
  branding       TextsServicePagesBranding
  design         TextsServicePagesDesign
  seo            TextsServicePagesSeo
  webDevelopment TextsServicePagesWebDevelopment
}

type TextsServicePagesBranding {
  carouselImages  TextsServicePagesBrandingCarouselImages[]
  description     String
  relatedProjects TextsServicePagesBrandingRelatedProjects[]
  whatWeDo        TextsServicePagesBrandingWhatWeDo
}

type TextsServicePagesBrandingCarouselImages {
  imageUrl String
}

type TextsServicePagesBrandingRelatedProjects {
  description String
  imageUrl    String
  title       String
}

type TextsServicePagesBrandingWhatWeDo {
  cards       TextsServicePagesBrandingWhatWeDoCards[]
  description String
}

type TextsServicePagesBrandingWhatWeDoCards {
  description String
  title       String
}

type TextsServicePagesDesign {
  carouselImages  TextsServicePagesDesignCarouselImages[]
  description     String
  relatedProjects TextsServicePagesDesignRelatedProjects[]
  whatWeDo        TextsServicePagesDesignWhatWeDo
}

type TextsServicePagesDesignCarouselImages {
  imageUrl String
}

type TextsServicePagesDesignRelatedProjects {
  description String
  imageUrl    String
  title       String
}

type TextsServicePagesDesignWhatWeDo {
  cards       TextsServicePagesDesignWhatWeDoCards[]
  description String
}

type TextsServicePagesDesignWhatWeDoCards {
  description String
  title       String
}

type TextsServicePagesSeo {
  carouselImages  TextsServicePagesSeoCarouselImages[]
  description     String
  relatedProjects TextsServicePagesSeoRelatedProjects[]
  whatWeDo        TextsServicePagesSeoWhatWeDo
}

type TextsServicePagesSeoCarouselImages {
  imageUrl String
}

type TextsServicePagesSeoRelatedProjects {
  description String
  imageUrl    String
  title       String
}

type TextsServicePagesSeoWhatWeDo {
  cards       TextsServicePagesSeoWhatWeDoCards[]
  description String
}

type TextsServicePagesSeoWhatWeDoCards {
  description String
  title       String
}

type TextsServicePagesWebDevelopment {
  carouselImages  TextsServicePagesWebDevelopmentCarouselImages[]
  description     String
  relatedProjects TextsServicePagesWebDevelopmentRelatedProjects[]
  whatWeDo        TextsServicePagesWebDevelopmentWhatWeDo
}

type TextsServicePagesWebDevelopmentCarouselImages {
  imageUrl String
}

type TextsServicePagesWebDevelopmentRelatedProjects {
  description String
  imageUrl    String
  title       String
}

type TextsServicePagesWebDevelopmentWhatWeDo {
  cards       TextsServicePagesWebDevelopmentWhatWeDoCards[]
  description String
}

type TextsServicePagesWebDevelopmentWhatWeDoCards {
  description String
  title       String
}

type TextsServices {
  description String
  imageUrl    String
  title       String
}

type TextsWhyChooseUs {
  description String
  imageUrl    String
  title       String
}

model Websites {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  Backup_Date         String?  @map("Backup Date")
  Content_Update_Date String?  @map("Content Update Date")
  Description         String
  Images              String
  Status              String?
  Tags                String[]
  Title               String
  URL                 String?
  archive             Boolean
  highlighted         Boolean
}

model clients {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  Brand_Name  String  @map("Brand Name")
  Site_Type   String  @map("Site Type")
  URL         String?
  description String
  tags        Json
}

model credentials {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model queries {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  E_mail     String @map("E-mail")
  First_Name String @map("First Name")
  Last_Name  String @map("Last Name")
  Mobile     String
  Query      String
}

model texts {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  clients      TextsClients[]
  hero         TextsHero?
  servicePages TextsServicePages?
  services     TextsServices[]
  whyChooseUs  TextsWhyChooseUs[]
}
